믿기지 않는다. 거짓말 처럼 보일 것이다. 불과 10초전에 5-11번 문제 까지 설명했는데 터치하나 잘못하여 초기화 됐다. 너무 충격적이여서 팔이 떨린다..
그래도 뭐 어떻게요 다시해야죠.. ㅜㅜㅜㅜㅜ

5-7번문제와 5-8번문제를 풀지 못했다.. 5-7번은 커맨드 라인 사용법을 도저히 모르겠다. 5-8번은 이해가 안된다. 
[5-9] 주어진 배열을 시계방향으로 90도 회전시켜서 출력하는 프로그램을 완성하시오.

char[][] star = { {'*','*',' ',' ',' '},
                  {'*','*',' ',' ',' '}, 
                  {'*','*','*','*','*'}, 
                  {'*','*','*','*','*'}
                };
char[][] result = new char[star[0].length][star.length];
for(int i=0; i < star.length;i++) {
    for(int j=0; j < star[i].length;j++) {
    //코드 작성
  }
}
아무렇게 코딩 하던중에 가장 비슷한 모양이 나왔다. 가장 근접했던 것은 int a에다 j를 집어 넣고 int b에다 i를 집어 넣었다.
int a=j
int b=i
result[a][b]=star[i][j] 
그러면 출력이 *****   처럼 나온다. 하지만 우리가 원하는 출력의 형태는 3번째 줄부터 있는 별들이 1~2열에 있는 것이다. a의 있는 값들은 정상적 인것 같으니
           *****
             ***
             ***
             ***
b를 바꿔 봤다. b=star.length-1-i로 바꿔 주었더니 우리가 원하는 모양으로 출력이 됬다!

[5-10] 다음은 알파벳과 숫자를 아래에 주어진 암호표로 암호화하는 프로그램이다. (1)에 알맞은 코드를 넣어서 완성하시오.
----------------------------------------------------
a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z
`,~,!,@,#,$,%,^,&,*,(,),-,_,+,=,|,[,],{,},;,:,,,.,/
----------------------------------------------------
0,1,2,3,4,5,6,7,8,9
q,w,e,r,t,y,u,i,o,p
----------------------------------------------------
char[] abcCode =
{ '`','~','!','@','#','$','%','^','&','*',
'(',')','-','_','+','=','|','[',']','{', '}',';',':',',','.','/'};

char[] numCode = {'q','w','e','r','t','y','u','i','o','p'};

String src = "abc123"; String result = "";
 for(int i=0; i < src.length();i++) {
    char ch = src.charAt(i);
    //코드 작성
    }
}
먼저 숫자와 문자를 구분하였다. 그래서 나는 조건문을 사용할 것 같다고 생각을 하였다. 
if(ch>='a' && ch<='z') //ch가 문자인지 아닌지 판단한다. 
      result +=abcCode[ch-'a'] // ch에 a를 빼주는 이유는 a의 유니코드는 48이다. 만약 ch가 a면 [a-a] = [48-48] =[0]
                               //abcCode[0] = ` 가 된다. 그리고 이렇게 구한 문자들은 result의 넣는다.
else if(ch>='0' && ch<='9')    // 숫자인지 아닌지 판단한다.  
      result +=numCode[ch-'0'] //여기서 0를 빼주는 이유는 위에 있는 설명과 동일하다. 구한 값은 result의 넣는다. 그러면 우리가 원하는 형태가 출력이 될것이다!
      
[5-11] 주어진 2차원 배열의 데이터보다 가로와 세로로 1이 더 큰 배열을 생성해서 배열 의 행과 열의 마지막 요소에 각 열과 행의 총합을 저장하고 출력하는 프로그램이다. 
(1) 에 알맞은 코드를 넣어서 완성하시오.        

int[][] score = {
                    {100, 100, 100},
                    {20, 20, 20},
                    {30, 30, 30}, 
                    {40, 40, 40},
                    {50, 50, 50}
               };
int[][] result = new int[score.length+1][score[0].length+1];
for(int i=0; i < score.length;i++) { 
    for(int j=0; j < score[i].length;j++) {
    //코드작성
    }
}
score의 있는 값들을 먼저 배열result에다 옮긴다. 1.result[i][j]=score[i][j];
출력의 형태를 보니 자신의 열에 있는 값들의 합. 자신의 행의 있는 값들의 합. 총합 이 있다.
먼저 각 열들의 합을 구하기 위해선 열의 하나를 고정시켜야 한다. 2.result[i][score[0].length] = score[i][j]; 이렇게 하면 result[0~4][3]부분에 값을 
각 행마다 저장 할 수 있다. 
그다음 각 행들의 합을 구하기 위해서는 3.result[score.length][j]=score[i][j]; 이렇게하면 result[5][0~2]부분에 값을 각 열마다 저장 할 수 있다. 
마지막으로 총합을 구해야한다. 4.result[score.length][score[0].length] = score[i][j];


[5-12] 예제5-23을 변경하여, 아래와 같은 결과가 나오도록 하시오.
[실행결과]
Q1. chair의 뜻은? dmlwk 틀렸습니다. 정답은 의자입니다
Q2. computer의 뜻은? 컴퓨터 정답입니다.
Q3. integer의 뜻은? 정수 정답입니다.
전체 3문제 중 2문제 맞추셨습니다.

이건 솔직히 말하면 책에 똑같이 나와 있어서 금방 풀었다. 책한번 보고 코딩한번 하는걸 반복해서..ㅎㅎ 푸는 방법은 
String[][] a= {
				{"chair","의자"},
				{"computer","컴퓨터"},
				{"integer","정수"},
		};
이렇게 배열을 선언하고 [0][0]를 보여주고 입력을 받는다. 그러면 비교를 해야하는데 비교는 equals를 사용했다. equals는 문자의 내용이 같은가를 확인한다. 
비교는 [0][1]으로 한다. 이렇게 계속 반복한다. 여기서 책과 다른 내용은 맞춘 문제의 수를 구하는 것인데. 이건 간단하게 정답을 맞춘 조건문안에 count를 해서 
맞춘 문제의 수를 구하면 된다. 

[5-13] 단어의 글자위치를 섞어서 보여주고 원래의 단어를 맞추는 예제이다. 실행결과와 같이 동작하도록 예제의 빈 곳을 채우시오.
String[] words = { "television", "computer", "mouse", "phone" };
Scanner scanner = new Scanner(System.in);
  
  for(int i=0;i<words.length;i++) {
    char[] question = words[i].toCharArray();
    
    //코드작성
    
    System.out.printf("Q%d. %s의 정답을 입력하세요.>",i+1, new String(question));
    String answer = scanner.nextLine();
   
   if(words[i].equals(answer.trim()))
   System.out.printf("맞았습니다.%n%n");
   else
   System.out.printf("틀렸습니다.%n%n");
}   
   
문제보니깐 
문제 5-5번 문제와 비슷한것 같다. 배열의 있는 것을 임의의 위치로 바꾼다. 그러니 매쓰 랜덤를 사용해야한다. 먼저 question에는 char형의 배열이 들어가 있다. 
그러니 words[0]이 char형으로 question의 들어갔으니 {'t','e','l','e','v','s','i','o','n'}으로 저장 된다. 
자이제 int a=(int)(Math.random()*question.length);으로 랜덤한 값을 출력한다.

그다음 char tmp=question[i];
     question[i]=question[a];
     question[a]=tmp;
     을 해서 question[0]을 기준으로로 랜덤한 위치에 값을 바꾼다. 이렇게 하면 바뀌지 않는 알파벳이 있을수 있다는 단점이 있다. 



 



